version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: mealrandomizer-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: mealrandomizer-backend
    environment:
      MEALS_DB_CONN: "postgres://alexsorichetti:mealpass@meals-db:5432/meals?sslmode=disable"
      DESSERTS_DB_CONN: "postgres://alexsorichetti:dessertpass@desserts-db:5432/desserts?sslmode=disable"
    ports:
      - "8080:8080"
    depends_on:
      - meals-db
      - desserts-db
    restart: unless-stopped

  meals-db:
    image: postgres:17
    container_name: meals-db
    environment:
      POSTGRES_USER: alexsorichetti
      POSTGRES_PASSWORD: mealpass
      POSTGRES_DB: meals
    ports:
      - "5433:5432"
    volumes:
      - meals_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alexsorichetti -d meals"]
      interval: 10s
      timeout: 5s
      retries: 5

  desserts-db:
    image: postgres:17
    container_name: desserts-db
    environment:
      POSTGRES_USER: alexsorichetti
      POSTGRES_PASSWORD: dessertpass
      POSTGRES_DB: desserts
    ports:
      - "5434:5432"
    volumes:
      - desserts_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alexsorichetti -d desserts"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  meals_data:
  desserts_data:
